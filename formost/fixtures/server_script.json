[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-02-20 15:41:15.142922",
  "module": "Formost",
  "name": "Batch_id_Customization_YYMM_Format",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Batch",
  "script": "if doc.reference_doctype==\"Purchase Receipt\":\n    if doc.reference_name:\n        posting_date=frappe.db.get_value(doc.reference_doctype,doc.reference_name,\"posting_date\")\n        doc.manufacturing_date=posting_date\n        if doc.item:\n            custom_series=frappe.db.get_value(\"Item\",doc.item,\"batch_number_series\")\n            if custom_series.split(\".\")[0]:\n                series=custom_series.split(\".\")[0]\n                series_count=custom_series.count(\"#\")\n                # frappe.throw(str(series_count))\n            else:\n                series=\"B\"\n                if custom_series.count(\"#\")>0:\n                    series_count=custom_series.count(\"#\")\n                else:\n                    series_count=3\n            postdate=frappe.utils.formatdate(doc.manufacturing_date,\"YY0MM\") # converting the date to MMYY format\n            # postdate=f'B-{postdate}' # adding expresions\n            data= frappe.db.sql(f\"SELECT * FROM `tabBatch` WHERE batch_id LIKE '%%{series}-{postdate}%%';\",as_dict=0)  # geting the list of data that have same exprtions\n            if len(data)  < 1: # checking if there is no batch as that expretions \n                doc.batch_id= f'{series}-{postdate}-{1:0{series_count}d}' # if not exist sending 001 as defalt\n            else: \n                batch_ids = [item[0] for item in data] # other wise geting all the batch_id from the data\n                numbers = [int(batch_id.split('-')[-1]) for batch_id in batch_ids] # and spliting the expresion from the batch_ids\n                max_number = max(numbers)# geting the  maximun of the number\n                \n                new_number = max_number + 1 # adding one with max_number to get teh next \n                # frappe.throw(str(new_number))\n                doc.batch_id= f'{series}-{postdate}-{new_number:0{series_count}d}' # returning the nuber witeh expresion\n    \n        ",
  "script_type": "DocType Event"
 }
]